/**
 * Author: Bibrak Qamar Chandio
 * 		   PhD Student Indiana University, Bloomington, IN
 *		   10-Dec-2016
 * Summary:
 *     Manager for Matrix Vector Multiplication.
 *  All IO is between the CPU and the DFE.
 */
package mvmdia;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

class MovingAverageManager {
	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		Manager manager = new Manager(params);
		Kernel kernel = new MVM_DIAKernel(manager.makeKernelParameters());
		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU);
		manager.createSLiCinterface(interfaceDefault());
		manager.build();
	}

	static EngineInterface interfaceDefault() {
		EngineInterface ei = new EngineInterface();
		InterfaceParam N = ei.addParam("N", CPUTypes.INT32);
		ei.setScalar("MVM_DIAKernel", "size", N);
		ei.setTicks("MVM_DIAKernel", N);
		ei.setStream("DIA_lower", CPUTypes.FLOAT, N * CPUTypes.FLOAT.sizeInBytes());
		ei.setStream("DIA_centre", CPUTypes.FLOAT, N * CPUTypes.FLOAT.sizeInBytes());
		ei.setStream("DIA_upper", CPUTypes.FLOAT, N * CPUTypes.FLOAT.sizeInBytes());
		ei.setStream("Vector_b", CPUTypes.FLOAT, N * CPUTypes.FLOAT.sizeInBytes());
		ei.setStream("Vector_x", CPUTypes.FLOAT, N * CPUTypes.FLOAT.sizeInBytes());
		return ei;
	}
}
